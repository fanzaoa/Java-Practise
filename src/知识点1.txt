数组相关类库
1.数组排序：java.util.Arrays.sort(数组名称)

2.数组拷贝（把方法做了一些变形）：
    System.arraycopy(原数组，原数组开始点，目标数组，目标数组开始点，拷贝长度)。
范例：实现数组拷贝
    现在假设有两个数组
        数组一：1、2、3、4、5、6、7、8、9；
        数组二：11、22、33、44、55、66、77、88、99；
    要求拷贝之后的数组二内容为：11、22、33、6、7、8、77、88、99
    System.arraycopy(dataA,5,dataB,3,3);


数据库与简单Java类之间的基本映射关系如下：// 查看newdemo.demo02
    数据实体表设计 = 类的定义； // class 表名
    表中的字段 = 类的成员属性； // newdemo.demo02.表名，public class Emp-->public String getInfo()
    表的外键关联 = 引用关联； //...
    表的一行记录 = 类的一个实例化对象； // demo02.Main
    表的多行记录 = 对象数组。// private Emp emps[];

对于数据表与简单java类之间的映射最好的解决步骤：先抛开所有的关联字段不看，写出类的基本组成，而后在通过应用配置关联字段的关系。
    第一步：分别定义Emp、Dept两个实体类
    第二步：配置所有的关联字段


对象（常量）池
    对象池的主要目的是实现数据的共享处理。以String对象池为例，里面的内容主要就是为了重用，而重用的实际上就属于共享设计，
但是在Java之中对象（常量）池实际上可以分为两种：
    静态常量池：指的是程序（*.class）在加载的时候会自动将此程序之中保存的字符串、普通的常量、类和方法的信息等等，全部进行分配。
    运行时常量池：当一个程序（*.class）加载之后，里面可能有一些变量，这个时候提供的常量池。